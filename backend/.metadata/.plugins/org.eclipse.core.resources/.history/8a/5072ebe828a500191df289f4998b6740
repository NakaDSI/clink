package app.clinkApi.controller;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;


import app.clinkApi.model.User;
import app.clinkApi.repository.UserRepository;
import app.clinkApi.service.UserService;


@RestController
@RequestMapping("/users")
public class UserController {
	
	@Autowired
	UserService userService;
	
	
	/*@RequestMapping("/all")
	public Hashtable<String,User> getAll(){
		
		return us.getAll();
	}
	*/
	/*@GetMapping("{id}")
	public Optional<User> getUser(@PathVariable("id") Long id)
	
	{
		 System.out.println(id);
		 
		Optional<User> temp= us.findById(id);
		System.out.println(temp);
		
		return temp;
	}*/
	
	@GetMapping(value="/users")
	public ResponseEntity<List<User>> getAllUser()
	{
		List<User> users=userService.getAllUser();
		return new ResponseEntity<List<User>>(users,HttpStatus.OK);
		
		
		
	}
	
	
	public ResponseEntity<User> saveUser(User user)
	{   if(user==null)
		throw new NullPointerException("Person object can not be null");
		User userdb=userService.save(user);
		user.setCreateddate(new Date());
		return new 
		
		
		
	}
	
/*//	@PostMapping("/delete/{id}")
//	public void deleteUser(@PathVariable("id")Long id)
//	{
//		
//		us.deleteById(id);
//	}
*/	
	/*@PostMapping("/create")
	public void createUser(@ResponseBody User user)
	
	{
		
		us.save(user);
		
	}*/
	
	
	
	
	
	
	
	

}
