package app.clinkApi.controller;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonView;

import app.clinkApi.model.FileModel;
import app.clinkApi.model.View;
import app.clinkApi.repository.FileRepository;
import org.springframework.http.MediaType;
import org.springframework.core.io.InputStreamResource;
 
@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class DownloadFileController {
	private static final String FILE_DIRECTORY = "F:\\clink\\backend\\clinkProject\\src\\images";
	
	@Autowired
	FileRepository fileRepository;

	/*
	 * List All Files
	 */
    @JsonView(View.FileInfo.class)
	@GetMapping("/cars")
	public ResponseEntity<InputStreamResource> getListFiles() throws IOException {
		// List<FileModel> names=fileRepository.findAll();
    	ClassPathResource imgFile = new ClassPathResource("F:\\clink\\images\bill");
    	 
        return ResponseEntity
                .ok()
                .contentType(MediaType.IMAGE_PNG)
                .body(new InputStreamResource(imgFile.getInputStream()));
		
	}
	
    /*
     * Download Files
     */
	/*@GetMapping("/api/file/{id}")
	public ResponseEntity<byte[]> getFile(@PathVariable Long id) {
		Optional<FileModel> fileOptional = fileRepository.findById(id);
		
		if(fileOptional.isPresent()) {
			FileModel file = fileOptional.get();
			return ResponseEntity.ok()
					.header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + file.getName() + "\"")
					.body(file.getPic());	
		}
		
		return ResponseEntity.status(404).body(null);
	}*/
}
